[build-system]
requires = [
    "scikit-build-core",
    "setuptools_scm>=6.2",
]
build-backend = "scikit_build_core.build"

[project]
name = "monochrome"
dynamic = ["version"]
description="Viewer for monochromatic video data"
readme = "README.md"
requires-python = ">=3.6"
authors = [
    {name = "Jan Lebert", email = "mail@janlebert.com" }
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Operating System :: POSIX",
    "Programming Language :: C++",
    "Programming Language :: Python :: 3",
    "Topic :: Desktop Environment",
    "Topic :: Multimedia :: Video :: Display",
    "Topic :: Scientific/Engineering :: Visualization",
]
dependencies = [
    "numpy",
    "flatbuffers>=23.5.26"
]

[project.urls]
Documentation = "https://monochrome.readthedocs.io"
Repository = "https://github.com/sitic/monochrome"

[project.optional-dependencies]
test = [
    "pytest"
]
"docs" = [
    "sphinx",
    "sphinxcontrib-napoleon",
    "sphinxcontrib-bibtex",
    "sphinxcontrib-video",
    "sphinx-autobuild",
    "sphinx-copybutton",
    "sphinx-codeautolink",
    "furo",
    "myst_nb>=1.0.0",
    "jupytext",
    "jupyter-cache",
    "sphinx-remove-toctrees",
    "sphinx-design",
    "enum-tools[sphinx]",
    "opticalmapping[all]"
]

[project.gui-scripts]
Monochrome = "monochrome.ipc:console_entrypoint"

[tool.scikit-build]
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
sdist.include = ["src/python/monochrome/_version.py"]
cmake.version = ">=3.12"
cmake.verbose = true
cmake.args = [
        "-DSTATIC_GCC:BOOL=ON",
        "-DDISABLE_MACOS_BUNDLE:BOOL=ON",
]
wheel.packages = [ "src/python/monochrome" ]
wheel.py-api = "py3"
wheel.install-dir = "monochrome/data"

[tool.scikit-build.cmake.define]
STATIC_GCC = "ON"
DISABLE_MACOS_BUNDLE = "ON"

[tool.setuptools_scm]
write_to = "src/python/monochrome/_version.py"
fallback_version = "0.1"

[tool.pytest.ini_options]
testpaths = "src/python/tests"

[tool.cibuildwheel]
archs = ["auto64"]  # 64-bit only
skip = "pp* *musllinux*"  # disable PyPy, musl-based wheels
test-requires = ["pytest"]
test-command = "pytest {project}/src/python/tests"
manylinux-x86_64-image = "quay.io/pypa/manylinux_2_28_x86_64"  # TODO: temporary, remove after upgrade of cibuildwheel

[tool.cibuildwheel.macos]
# https://cibuildwheel.readthedocs.io/en/stable/faq/#apple-silicon
archs = ["universal2"]
test-skip = ["*_arm64", "*_universal2:arm64"]

[tool.cibuildwheel.linux]
before-all = "yum install -y wayland-devel libxkbcommon-devel libXcursor-devel libXi-devel libXinerama-devel libXrandr-devel mesa-libGL-devel libdwarf-devel binutils-devel"
